name: ci
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.name != 'actions'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.3
        with:
          node-version: '14'
      - uses: bahmutov/npm-install@v1
      #- run: yarn test
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  check_if_version_upgraded:
    name: Check if version upgrade
    runs-on: ubuntu-latest
    needs: build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
    steps:
      - uses: garronej/github_actions_toolkit@v2.2
        id: step1
        with:
          action_name: is_package_json_version_upgraded

  release-snapshot:
    runs-on: ubuntu-latest
    needs:
      - check_if_version_upgraded
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - uses: softprops/action-gh-release@v1
        with:
          name: Release Candidate v${{ needs.check_if_version_upgraded.outputs.to_version }}
          tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}-rc
          #target_commitish: ${{ github.ref }}
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs:
      - build
      - check_if_version_upgraded
    runs-on: ubuntu-latest
    # We publish the the docker image only if it's a push on the default branch or if it's a PR from a
    # branch (meaning not a PR from a fork). It would be more straightforward to test if secrets.DOCKERHUB_TOKEN is
    # defined but GitHub Action don't allow it.
    if: |
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.owner.login == github.event.pull_request.base.repo.owner.login
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - run: tar -cvf build.tar ./build
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: v${{ needs.check_if_version_upgraded.outputs.to_version }}-rc
          file: Dockerfile

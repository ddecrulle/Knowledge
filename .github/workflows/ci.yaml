name: ci
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.name != 'github-actions[bot]'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      #- run: yarn test
      - run: yarn
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  check_if_version_upgraded:
    name: Check if version upgrade
    runs-on: ubuntu-latest
    needs: build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
      is_release_beta: ${{ steps.step1.outputs.is_release_beta }}
    steps:
      - uses: garronej/ts-ci@v2.1.0
        id: step1
        with:
          action_name: is_package_json_version_upgraded
          branch: ${{ github.head_ref || github.ref }}

  docker:
    needs:
      - check_if_version_upgraded
    if: |
      github.event_name == 'push'  && 
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Computing Docker image tags
        id: step1
        env:
          IS_UPGRADED_VERSION: ${{ needs.check_if_version_upgraded.outputs.is_upgraded_version }}
          TO_VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
        run: |
          OUT=$GITHUB_REPOSITORY:$TO_VERSION,$GITHUB_REPOSITORY:latest
          OUT=$(echo "$OUT" | awk '{print tolower($0)}') 
          echo "docker_tags=$OUT" >> "$GITHUB_OUTPUT"
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          context: .
          tags: ${{ steps.step1.outputs.docker_tags }}
          file: Dockerfile

  release:
    runs-on: ubuntu-latest
    needs:
      - check_if_version_upgraded
    if: |
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
      (
        github.event_name == 'push' ||
        needs.check_if_version_upgraded.outputs.is_release_beta == 'true'
      )
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - uses: softprops/action-gh-release@v0.1.15
        with:
          name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
          tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ needs.check_if_version_upgraded.outputs.is_release_beta == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  poke_gitops:
    runs-on: ubuntu-latest
    needs:
      - docker
      - release
    steps:
      - uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_PRIVATE_REPO_DISPATCH }}
          event-type: update_knowledge_ui
          repository: InseeFrLab/data-collection-deploy

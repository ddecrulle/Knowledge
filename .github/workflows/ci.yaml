name: ci
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.head_commit.author.name != 'github-actions[bot]'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      #- run: yarn test
      - run: yarn
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  check_if_version_upgraded:
    name: Check if version upgrade
    runs-on: ubuntu-latest
    needs: build
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
      is_release_beta: ${{steps.step1.outputs.is_release_beta }}
    steps:
      - uses: garronej/github_actions_toolkit@v2.2
        id: step1
        with:
          action_name: is_package_json_version_upgraded

  echo_check_version:
    runs-on: ubuntu-latest
    needs: check_if_version_upgraded
    steps:
      - name: echo outputs
        run: |
          echo "from_version: ${{  needs.check_if_version_upgraded.outputs.from_version }}"
          echo "to_version: ${{  needs.check_if_version_upgraded.outputs.to_version }}"
          echo "is_upgraded_version: ${{  needs.check_if_version_upgraded.outputs.is_upgraded_version }}"
          echo "is_release_beta: ${{  needs.check_if_version_upgraded.outputs.is_release_beta }}"

  update_changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    needs:
      - check_if_version_upgraded
    if: needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: yarn global add conventional-changelog-cli
      - run: yarn
      - run: yarn changelog
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit --allow-empty -m "docs(changelog): [skip ci] update changelog"
          git push

  docker:
    needs:
      - build
      - check_if_version_upgraded
      - update_changelog
    if: |
      github.event_name == 'push'  && 
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Computing Docker image tags
        id: step1
        env:
          IS_UPGRADED_VERSION: ${{ needs.check_if_version_upgraded.outputs.is_upgraded_version }}
          TO_VERSION: ${{ needs.check_if_version_upgraded.outputs.to_version }}
        run: |
          OUT=$GITHUB_REPOSITORY:$(
          [ "$GITHUB_EVENT_NAME" == "pull_request" ] &&
            echo "$GITHUB_HEAD_REF" ||
            echo "${GITHUB_REF#refs/*/}"
          )
          if [ "$IS_UPGRADED_VERSION" = "true" ]; then
            OUT=$OUT,$GITHUB_REPOSITORY:$TO_VERSION,$GITHUB_REPOSITORY:latest
          fi
          OUT=$(echo "$OUT" | awk '{print tolower($0)}') 
          echo ::set-output name=docker_tags::$OUT
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - run: tar -cvf build.tar ./build
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ steps.step1.outputs.docker_tags }}
          file: Dockerfile

  release:
    runs-on: ubuntu-latest
    needs:
      - check_if_version_upgraded
      - build
      - docker
    if: |
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
      github.event_name == 'push' && needs.check_if_version_upgraded.outputs.is_release_beta == 'false'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: softprops/action-gh-release@v0.1.14
        with:
          name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
          tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
          target_commitish: ${{ github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: false
          body: ðŸ“‹ [CHANGELOG](https://github.com/${{github.repository}}/blob/v${{ needs.check_if_version_upgraded.outputs.to_version }}/CHANGELOG.md)
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
